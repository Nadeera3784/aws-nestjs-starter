Resources:
  CognitoUserPool:
    Type: AWS::Cognito::UserPool
    DeletionPolicy: Delete
    Properties:
      UserPoolName: ${self:service}-${self:provider.stage}-user-pool
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email

  CognitoUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    DeletionPolicy: Delete
    Properties:
      ClientName: ${self:service}-${self:provider.stage}-user-pool-client
      UserPoolId:
        Ref: CognitoUserPool
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_CUSTOM_AUTH
        - ALLOW_USER_SRP_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
      PreventUserExistenceErrors: ENABLED

  CognitoIdentityPool:
    Type: AWS::Cognito::IdentityPool
    DeletionPolicy: Delete
    Properties:
      IdentityPoolName: ${self:service}-${self:provider.stage}-identity-pool
      AllowUnauthenticatedIdentities: false
      CognitoIdentityProviders:
        - ClientId:
            Ref: CognitoUserPoolClient
          ProviderName:
            Fn::GetAtt: ['CognitoUserPool', 'ProviderName']

  CognitoIdentityPoolRoles:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    DeletionPolicy: Delete
    Properties:
      IdentityPoolId:
        Ref: CognitoIdentityPool
      Roles:
        authenticated:
          Fn::GetAtt: [CognitoAuthRole, Arn]

  CognitoUserAuthenticatedPolicy:
    Type: AWS::IAM::ManagedPolicy
    DeletionPolicy: Delete
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Action:
              - 'mobileanalytics:PutEvents'
              - 'cognito-sync:*'
              - 'cognito-identity:*'
            Resource: '*'

  CognitoAuthRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Federated: 'cognito-identity.amazonaws.com'
            Action:
              - 'sts:AssumeRoleWithWebIdentity'
            Condition:
              StringEquals:
                'cognito-identity.amazonaws.com:aud':
                  Ref: CognitoIdentityPool
              'ForAnyValue:StringLike':
                'cognito-identity.amazonaws.com:amr': authenticated
      ManagedPolicyArns:
        - Ref: CognitoUserAuthenticatedPolicy
        - Ref: ExecuteApiPolicy

  ExecuteApiPolicy:
    Type: AWS::IAM::ManagedPolicy
    DeletionPolicy: Delete
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Action:
              - 'execute-api:Invoke'
            Resource:
              Fn::Join:
                - ''
                - - 'arn:aws:execute-api:'
                  - Ref: AWS::Region
                  - ':'
                  - Ref: AWS::AccountId
                  - ':'
                  - Ref: ApiGatewayRestApi
                  - '/*'

Outputs:
  UserPoolId:
    Value:
      Ref: CognitoUserPool
  UserPoolClientId:
    Value:
      Ref: CognitoUserPoolClient
  IdentityPoolId:
    Value:
      Ref: CognitoIdentityPool
