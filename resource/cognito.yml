Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    DeletionPolicy: Delete
    Properties:
      UserPoolName: ${self:service}-${self:provider.stage}-user-pool
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false
      AliasAttributes:
        - email
      AutoVerifiedAttributes:
        - email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: false
          RequireUppercase: true
      Schema:
        - Name: email
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: true
        - Name: role
          AttributeDataType: String
          DeveloperOnlyAttribute: false
          Mutable: true
          Required: false
  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    DeletionPolicy: Delete
    Properties:
      ClientName: ${self:service}-${self:provider.stage}-user-pool-client
      GenerateSecret: false
      RefreshTokenValidity: 7
      UserPoolId:
        Ref: UserPool
  IdentityPool:
    Type: AWS::Cognito::IdentityPool
    DeletionPolicy: Delete
    Properties:
      IdentityPoolName: ${self:service}-${self:provider.stage}-identity-pool
      AllowUnauthenticatedIdentities: true
      CognitoIdentityProviders:
        - ClientId:
            Ref: UserPoolClient
          ProviderName:
            Fn::Join:
              - ''
              - - cognito-idp.
                - Ref: AWS::Region
                - .amazonaws.com/
                - Ref: UserPool
  CognitoUserBasePolicy:
    Type: AWS::IAM::ManagedPolicy
    DeletionPolicy: Delete
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - mobileanalytics:PutEvents
              - cognito-sync:*
            Resource:
              - '*'
  UnauthenticatedRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: cognito-identity.amazonaws.com
            Condition:
              StringEquals:
                'cognito-identity.amazonaws.com:aud':
                  Ref: IdentityPool
              ForAnyValue:StringLike:
                'cognito-identity.amazonaws.com:amr': unauthenticated
      ManagedPolicyArns:
        - Ref: CognitoUserBasePolicy
  CognitoUserAuthenticatedPolicy:
    Type: AWS::IAM::ManagedPolicy
    DeletionPolicy: Delete
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - cognito-identity:*
            Resource:
              - '*'
  AuthenticatedRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: cognito-identity.amazonaws.com
            Condition:
              StringEquals:
                'cognito-identity.amazonaws.com:aud':
                  Ref: IdentityPool
              ForAnyValue:StringLike:
                'cognito-identity.amazonaws.com:amr': authenticated
      ManagedPolicyArns:
        - Ref: CognitoUserBasePolicy
        - Ref: CognitoUserAuthenticatedPolicy
  ApiGatewayGetPolicy:
    Type: AWS::IAM::ManagedPolicy
    DeletionPolicy: Delete
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Action:
              - 'execute-api:Invoke'
            Resource:
              Fn::Join:
                - ''
                - - 'arn:aws:execute-api:'
                  - Ref: AWS::Region
                  - ':'
                  - Ref: AWS::AccountId
                  - ':'
                  - Ref: ApiGatewayRestApi
                  - '/*/GET/*'
  ApiGatewayAnyPolicy:
    Type: AWS::IAM::ManagedPolicy
    DeletionPolicy: Delete
    Properties:
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Action:
              - 'execute-api:Invoke'
            Resource:
              Fn::Join:
                - ''
                - - 'arn:aws:execute-api:'
                  - Ref: AWS::Region
                  - ':'
                  - Ref: AWS::AccountId
                  - ':'
                  - Ref: ApiGatewayRestApi
                  - '/*/*/*'
  AdminRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: cognito-identity.amazonaws.com
            Condition:
              StringEquals:
                'cognito-identity.amazonaws.com:aud':
                  Ref: IdentityPool
              ForAnyValue:StringLike:
                'cognito-identity.amazonaws.com:amr': authenticated
      ManagedPolicyArns:
        - Ref: CognitoUserBasePolicy
        - Ref: CognitoUserAuthenticatedPolicy
        - Ref: ApiGatewayAnyPolicy
  UserRole:
    Type: AWS::IAM::Role
    DeletionPolicy: Delete
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: sts:AssumeRoleWithWebIdentity
            Principal:
              Federated: cognito-identity.amazonaws.com
            Condition:
              StringEquals:
                'cognito-identity.amazonaws.com:aud':
                  Ref: IdentityPool
              ForAnyValue:StringLike:
                'cognito-identity.amazonaws.com:amr': authenticated
      ManagedPolicyArns:
        - Ref: CognitoUserBasePolicy
        - Ref: CognitoUserAuthenticatedPolicy
        - Ref: ApiGatewayGetPolicy
  RoleAttachment:
    Type: AWS::Cognito::IdentityPoolRoleAttachment
    DeletionPolicy: Delete
    Properties:
      IdentityPoolId:
        Ref: IdentityPool
      Roles:
        unauthenticated:
          Fn::GetAtt:
            - UnauthenticatedRole
            - Arn
        authenticated:
          Fn::GetAtt:
            - AuthenticatedRole
            - Arn
  IdentityPoolRoleMapping:
    Type: Custom::IdentityPoolRoleMapping
    DeletionPolicy: Delete
    DependsOn:
      - CustomDashresourceDashfunctionLambdaFunction
      - IdentityPool
      - UserPool
      - UserPoolClient
      - AdminRole
      - UserRole
      - RoleAttachment
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomDashresourceDashfunctionLambdaFunction
          - Arn
      IdentityPoolId:
        Ref: IdentityPool
      IdentityProviderName:
        Fn::Join:
          - ''
          - - cognito-idp.
            - Ref: AWS::Region
            - .amazonaws.com/
            - Ref: UserPool
            - ':'
            - Ref: UserPoolClient
      RoleMapping:
        AmbiguousRoleResolution: Deny
        Type: Rules
        RulesConfiguration:
          Rules:
            - Claim: cognito:groups
              MatchType: Equals
              Value: admin
              RoleARN:
                Fn::GetAtt:
                  - AdminRole
                  - Arn
            - Claim: cognito:groups
              MatchType: Equals
              Value: user
              RoleARN:
                Fn::GetAtt:
                  - UserRole
                  - Arn

Outputs:
  UserPoolId:
    Value:
      Ref: UserPool
  UserPoolClientId:
    Value:
      Ref: UserPoolClient
  IdentityPoolId:
    Value:
      Ref: IdentityPool
