service: aws-nestjs-starter

provider:
  name: aws
  runtime: nodejs12.x
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'us-east-1'}
  environment:
    SERVICE: ${self:service}
    STAGE: ${self:provider.stage}
    REGION: ${self:provider.region}
    NO_COLOR: ${env:NO_COLOR, 'true'}
  apiGateway:
    shouldStartNameWithService: true
  iamRoleStatements:
    - Effect: Allow
      Action:
        - cognito-identity:GetIdentityPoolRoles
        - cognito-identity:SetIdentityPoolRoles
        - iam:PassRole
      Resource: '*'
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: 'arn:aws:dynamodb:${self:provider.region}:*:*'

plugins:
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline

# remove the unnecessary packages to keep small upload size
package:
  exclude:
    - node_modules/typescript/**
    - node_modules/@types/**

custom:
  dynamodb:
    stages:
      - ${self:provider.stage}
    start:
      port: 8000
      inMemory: true
      migrate: true
      seed: false

functions:
  custom-resource-function:
    handler: src/handler/custom-resource.handler
  index-function:
    handler: src/index.handler
    events:
      - http:
          cors: true
          path: notification
          method: get
          authorizer: aws_iam
      - http:
          cors: true
          path: notification
          method: post
          authorizer: aws_iam
      - http:
          cors: true
          path: notification
          method: patch
          authorizer: aws_iam
      - http:
          cors: true
          path: graphql
          method: any
          authorizer: aws_iam

resources:
  - ${file(resource/dynamodb.yml)}
  - ${file(resource/cognito.yml)}
